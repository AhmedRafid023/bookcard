// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// datasource db {
//   provider = "mysql"
//   url      = env("DATABASE_URL")
//   relationMode = "prisma"
// }

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  password      String?
  email         String?   @unique
  phone         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  role          String?
  status        String?
  places        Place[]
  bookings      Booking[]
  @@map(name: "users")
}

model Place {
  id            String    @id @default(cuid())
  userId        String    @map("user_id")
  name          String?
  description   String?
  address       String?
  price         Float?
  bookings      Booking[]
  capacity      Int?

  image         String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  // @@index([userId])
}

model Booking {
  id            String    @id @default(cuid())
  userId        String    @map("user_id")
  placeId       String    @map("place_id")
  date          DateTime?
  slot         String?
  status        String?
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @updatedAt @map(name: "updated_at")
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  place Place @relation(fields: [placeId], references: [id], onDelete: Cascade)

  // @@index([userId])
  // @@index([placeId])
}

